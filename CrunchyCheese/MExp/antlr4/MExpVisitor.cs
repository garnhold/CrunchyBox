//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Garrett/Documents/Visual Studio 2013/Projects/CrunchyBox/CrunchyCheese/MExp/MExpGrammar\MExp.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MExpParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IMExpVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MExpParser.mExpEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpEntry([NotNull] MExpParser.MExpEntryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Constant</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Constant([NotNull] MExpParser.MExpExpression_ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Additive</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Additive([NotNull] MExpParser.MExpExpression_AdditiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Sign</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Sign([NotNull] MExpParser.MExpExpression_SignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Term</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Term([NotNull] MExpParser.MExpExpression_TermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Group</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Group([NotNull] MExpParser.MExpExpression_GroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Multiplicative</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Multiplicative([NotNull] MExpParser.MExpExpression_MultiplicativeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpExpression_Function</c>
	/// labeled alternative in <see cref="MExpParser.mExpExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpExpression_Function([NotNull] MExpParser.MExpExpression_FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpUnaryOperator_Negate</c>
	/// labeled alternative in <see cref="MExpParser.mExpUnarySignOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpUnaryOperator_Negate([NotNull] MExpParser.MExpUnaryOperator_NegateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpBinaryAdditiveOperator_Addition</c>
	/// labeled alternative in <see cref="MExpParser.mExpBinaryAdditiveOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpBinaryAdditiveOperator_Addition([NotNull] MExpParser.MExpBinaryAdditiveOperator_AdditionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpBinaryAdditiveOperator_Subtraction</c>
	/// labeled alternative in <see cref="MExpParser.mExpBinaryAdditiveOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpBinaryAdditiveOperator_Subtraction([NotNull] MExpParser.MExpBinaryAdditiveOperator_SubtractionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpBinaryMultiplicativeOperator_Multiplication</c>
	/// labeled alternative in <see cref="MExpParser.mExpBinaryMultiplicativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpBinaryMultiplicativeOperator_Multiplication([NotNull] MExpParser.MExpBinaryMultiplicativeOperator_MultiplicationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpBinaryMultiplicativeOperator_Division</c>
	/// labeled alternative in <see cref="MExpParser.mExpBinaryMultiplicativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpBinaryMultiplicativeOperator_Division([NotNull] MExpParser.MExpBinaryMultiplicativeOperator_DivisionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mExpBinaryMultiplicativeOperator_Modulo</c>
	/// labeled alternative in <see cref="MExpParser.mExpBinaryMultiplicativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpBinaryMultiplicativeOperator_Modulo([NotNull] MExpParser.MExpBinaryMultiplicativeOperator_ModuloContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MExpParser.mExpFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMExpFunction([NotNull] MExpParser.MExpFunctionContext context);
}
