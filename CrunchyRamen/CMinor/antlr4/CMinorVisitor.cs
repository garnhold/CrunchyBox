//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Garrett/Documents/Visual Studio 2013/Projects/CrunchyBox/CrunchyRamen/CMinor/CMinorGrammar\CMinor.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CMinorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface ICMinorVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorType([NotNull] CMinorParser.CMinorTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorTypeList([NotNull] CMinorParser.CMinorTypeListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorConstant([NotNull] CMinorParser.CMinorConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorMember([NotNull] CMinorParser.CMinorMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorExpression([NotNull] CMinorParser.CMinorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorMultiplicativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorMultiplicativeOperator([NotNull] CMinorParser.CMinorMultiplicativeOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorAdditiveOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorAdditiveOperator([NotNull] CMinorParser.CMinorAdditiveOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorComparativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorComparativeOperator([NotNull] CMinorParser.CMinorComparativeOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorBooleanOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorBooleanOperator([NotNull] CMinorParser.CMinorBooleanOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CMinorParser.cMinorExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCMinorExpressionList([NotNull] CMinorParser.CMinorExpressionListContext context);
}
