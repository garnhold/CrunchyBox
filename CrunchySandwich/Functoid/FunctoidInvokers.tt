<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\CrunchyDough\bin\Release\CrunchyDough.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CrunchyDough" #>
<#@ output extension=".cs" #>
<#
#>
using System;
using System.Reflection;
using System.Collections;
using System.Collections.Generic;

using UnityEngine;

using CrunchyDough;
using CrunchyBun;

namespace CrunchySandwich
{
<#for(int i = 0; i <= 10; i++){#>
	<#
	string class_name = "FunctoidInvoker" + TTCS.ArgumentsForGeneric("P#", i);
	#>

	public class <#=class_name#> : FunctoidInvokerBase
    {
	<#for(int j = 1; j <= i; j++){#>
		[SerializeFieldEX]private P<#=j#> p<#=j#>;
	<#}#>

		public override object Invoke(object obj, MethodInfo method)
		{
			return method.Invoke(obj, new object[] {
				<#for(int j = 1; j <= i; j++){#>
					p<#=j#>,
				<#}#>
			});
		}
	}
<#}#>
}
