<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
string[] type_names = new string[]{"GameObject", "Component"};
#>
using System;
using System.Collections;
using System.Collections.Generic;

using UnityEngine;

using CrunchyDough;
using CrunchyBun;

namespace CrunchySandwich
{
	static public class GameObjectComponentExtensions_Child_Get
    {
<# foreach(string type_name in type_names){#>
		static public GameObject GetChildByName(this <#=type_name#> item, string name)
        {
            return item.GetChildren().FindFirst(g => g.name == name);
        }

        static public GameObject GetChildByNameSequence(this <#=type_name#> item, IEnumerable<string> names)
        {
            GameObject game_object = item.gameObject;

            foreach (string name in names)
            {
                if (game_object == null)
                    return null;

                game_object = game_object.GetChildByName(name);
            }

            return game_object;
        }

        static public GameObject GetChildByPath(this <#=type_name#> item, string path)
        {
            return item.GetChildByNameSequence(path.SplitOn("->"));
        }

<# } #>
	}
}