<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
string[] type_names = new string[]{"GameObject", "Component"};
#>
using System;
using System.Collections;
using System.Collections.Generic;

using UnityEngine;

using CrunchyDough;
using CrunchyBun;

namespace CrunchySandwich
{
	static public class GameObjectComponentExtensions_Transform_Planar_Towards
    {
<# foreach(string type_name in type_names){#>
		static public void TowardsPlanarPosition(this <#=type_name#> item, Vector2 target, Vector2 amount)
        {
            item.transform.TowardsPlanarPosition(target, amount);
        }
        static public void TowardsLocalPlanarPosition(this <#=type_name#> item, Vector2 target, Vector2 amount)
        {
            item.transform.TowardsLocalPlanarPosition(target, amount);
        }
        
        static public void TowardsPlanarPosition(this <#=type_name#> item, Vector2 target, float amount)
        {
            item.transform.TowardsPlanarPosition(target, amount);
        }
        static public void TowardsLocalPlanarPosition(this <#=type_name#> item, Vector2 target, float amount)
        {
            item.transform.TowardsLocalPlanarPosition(target, amount);
        }

        static public void TowardsPlanarRotation(this <#=type_name#> item, float target, float amount)
        {
            item.transform.TowardsPlanarRotation(target, amount);
        }
        static public void TowardsLocalPlanarRotation(this <#=type_name#> item, float target, float amount)
        {
            item.transform.TowardsLocalPlanarRotation(target, amount);
        }

        static public void TowardsPlanarScale(this <#=type_name#> item, Vector2 target, Vector2 amount)
        {
            item.transform.TowardsPlanarScale(target, amount);
        }
        static public void TowardsLocalPlanarScale(this <#=type_name#> item, Vector2 target, Vector2 amount)
        {
            item.transform.TowardsLocalPlanarScale(target, amount);
        }

		static public void TowardsPlanarScale(this <#=type_name#> item, float target, float amount)
        {
            item.transform.TowardsPlanarScale(target, amount);
        }
        static public void TowardsLocalPlanarScale(this <#=type_name#> item, float target, float amount)
        {
            item.transform.TowardsLocalPlanarScale(target, amount);
        }

<# } #>
	}
}