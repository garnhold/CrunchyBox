//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/garrett/Documents/Programming/CrunchyBox/CrunchyRecipe/Tyon/TyonGrammar/Tyon.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class TyonLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		REAL=18, INTEGER=19, STRING=20, BOOL=21, ID=22, WHITESPACE=23;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"REAL", "INTEGER", "STRING", "BOOL", "ID", "WHITESPACE"
	};


	public TyonLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public TyonLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'<'", "','", "'>'", "'['", "']'", "'('", "'&'", "')'", "'{'", "'}'", 
		"'$'", "':'", "'null'", "'typeof'", "'@'", "'='", "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "REAL", "INTEGER", "STRING", "BOOL", 
		"ID", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tyon.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static TyonLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x19', '\x9F', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x13', '\x5', '\x13', ']', '\n', '\x13', '\x3', 
		'\x13', '\x6', '\x13', '`', '\n', '\x13', '\r', '\x13', '\xE', '\x13', 
		'\x61', '\x3', '\x13', '\x3', '\x13', '\x6', '\x13', '\x66', '\n', '\x13', 
		'\r', '\x13', '\xE', '\x13', 'g', '\x3', '\x14', '\x5', '\x14', 'k', '\n', 
		'\x14', '\x3', '\x14', '\x6', '\x14', 'n', '\n', '\x14', '\r', '\x14', 
		'\xE', '\x14', 'o', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\a', '\x15', 'v', '\n', '\x15', '\f', '\x15', '\xE', '\x15', 
		'y', '\v', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x5', '\x16', '\x90', '\n', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\a', '\x17', '\x94', '\n', '\x17', '\f', 
		'\x17', '\xE', '\x17', '\x97', '\v', '\x17', '\x3', '\x18', '\x6', '\x18', 
		'\x9A', '\n', '\x18', '\r', '\x18', '\xE', '\x18', '\x9B', '\x3', '\x18', 
		'\x3', '\x18', '\x3', 'w', '\x2', '\x19', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', 
		'\x3', '\x2', '\a', '\x4', '\x2', '-', '-', '/', '/', '\x3', '\x2', '\x32', 
		';', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\a', '\x2', 
		'\x30', '\x30', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\xAC', '\x2', 
		'\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x31', '\x3', '\x2', '\x2', '\x2', '\x5', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x35', '\x3', '\x2', '\x2', '\x2', '\t', '\x37', 
		'\x3', '\x2', '\x2', '\x2', '\v', '\x39', '\x3', '\x2', '\x2', '\x2', 
		'\r', ';', '\x3', '\x2', '\x2', '\x2', '\xF', '=', '\x3', '\x2', '\x2', 
		'\x2', '\x11', '?', '\x3', '\x2', '\x2', '\x2', '\x13', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\x15', '\x43', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'\x45', '\x3', '\x2', '\x2', '\x2', '\x19', 'G', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', 'I', '\x3', '\x2', '\x2', '\x2', '\x1D', 'N', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', 'U', '\x3', '\x2', '\x2', '\x2', '!', 'W', '\x3', 
		'\x2', '\x2', '\x2', '#', 'Y', '\x3', '\x2', '\x2', '\x2', '%', '\\', 
		'\x3', '\x2', '\x2', '\x2', '\'', 'j', '\x3', '\x2', '\x2', '\x2', ')', 
		'q', '\x3', '\x2', '\x2', '\x2', '+', '\x8F', '\x3', '\x2', '\x2', '\x2', 
		'-', '\x91', '\x3', '\x2', '\x2', '\x2', '/', '\x99', '\x3', '\x2', '\x2', 
		'\x2', '\x31', '\x32', '\a', '>', '\x2', '\x2', '\x32', '\x4', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\x34', '\a', '.', '\x2', '\x2', '\x34', 
		'\x6', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', '@', '\x2', '\x2', 
		'\x36', '\b', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', ']', '\x2', 
		'\x2', '\x38', '\n', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', '_', 
		'\x2', '\x2', ':', '\f', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '*', 
		'\x2', '\x2', '<', '\xE', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', 
		'(', '\x2', '\x2', '>', '\x10', '\x3', '\x2', '\x2', '\x2', '?', '@', 
		'\a', '+', '\x2', '\x2', '@', '\x12', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x42', '\a', '}', '\x2', '\x2', '\x42', '\x14', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\x44', '\a', '\x7F', '\x2', '\x2', '\x44', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x46', '\a', '&', '\x2', '\x2', '\x46', 
		'\x18', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '<', '\x2', '\x2', 
		'H', '\x1A', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', 'p', '\x2', '\x2', 
		'J', 'K', '\a', 'w', '\x2', '\x2', 'K', 'L', '\a', 'n', '\x2', '\x2', 
		'L', 'M', '\a', 'n', '\x2', '\x2', 'M', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'N', 'O', '\a', 'v', '\x2', '\x2', 'O', 'P', '\a', '{', '\x2', '\x2', 
		'P', 'Q', '\a', 'r', '\x2', '\x2', 'Q', 'R', '\a', 'g', '\x2', '\x2', 
		'R', 'S', '\a', 'q', '\x2', '\x2', 'S', 'T', '\a', 'h', '\x2', '\x2', 
		'T', '\x1E', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', '\x42', '\x2', 
		'\x2', 'V', ' ', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\a', '?', '\x2', 
		'\x2', 'X', '\"', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', '=', '\x2', 
		'\x2', 'Z', '$', '\x3', '\x2', '\x2', '\x2', '[', ']', '\t', '\x2', '\x2', 
		'\x2', '\\', '[', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\x3', '\x2', 
		'\x2', '\x2', ']', '_', '\x3', '\x2', '\x2', '\x2', '^', '`', '\t', '\x3', 
		'\x2', '\x2', '_', '^', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\x3', 
		'\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', '\x2', '\x61', 
		'\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', 
		'\x2', '\x63', '\x65', '\a', '\x30', '\x2', '\x2', '\x64', '\x66', '\t', 
		'\x3', '\x2', '\x2', '\x65', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 
		'g', '\x3', '\x2', '\x2', '\x2', 'g', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'g', 'h', '\x3', '\x2', '\x2', '\x2', 'h', '&', '\x3', '\x2', '\x2', '\x2', 
		'i', 'k', '\t', '\x2', '\x2', '\x2', 'j', 'i', '\x3', '\x2', '\x2', '\x2', 
		'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\x3', '\x2', '\x2', '\x2', 
		'l', 'n', '\t', '\x3', '\x2', '\x2', 'm', 'l', '\x3', '\x2', '\x2', '\x2', 
		'n', 'o', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', '(', '\x3', '\x2', '\x2', '\x2', 
		'q', 'w', '\a', '$', '\x2', '\x2', 'r', 's', '\a', '^', '\x2', '\x2', 
		's', 'v', '\a', '$', '\x2', '\x2', 't', 'v', '\v', '\x2', '\x2', '\x2', 
		'u', 'r', '\x3', '\x2', '\x2', '\x2', 'u', 't', '\x3', '\x2', '\x2', '\x2', 
		'v', 'y', '\x3', '\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', '\x2', 
		'w', 'u', '\x3', '\x2', '\x2', '\x2', 'x', 'z', '\x3', '\x2', '\x2', '\x2', 
		'y', 'w', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', '$', '\x2', '\x2', 
		'{', '*', '\x3', '\x2', '\x2', '\x2', '|', '}', '\a', 'v', '\x2', '\x2', 
		'}', '~', '\a', 't', '\x2', '\x2', '~', '\x7F', '\a', 'w', '\x2', '\x2', 
		'\x7F', '\x90', '\a', 'g', '\x2', '\x2', '\x80', '\x81', '\a', 'h', '\x2', 
		'\x2', '\x81', '\x82', '\a', '\x63', '\x2', '\x2', '\x82', '\x83', '\a', 
		'n', '\x2', '\x2', '\x83', '\x84', '\a', 'u', '\x2', '\x2', '\x84', '\x90', 
		'\a', 'g', '\x2', '\x2', '\x85', '\x86', '\a', 'p', '\x2', '\x2', '\x86', 
		'\x90', '\a', 'q', '\x2', '\x2', '\x87', '\x88', '\a', '{', '\x2', '\x2', 
		'\x88', '\x89', '\a', 'g', '\x2', '\x2', '\x89', '\x90', '\a', 'u', '\x2', 
		'\x2', '\x8A', '\x8B', '\a', 'q', '\x2', '\x2', '\x8B', '\x90', '\a', 
		'p', '\x2', '\x2', '\x8C', '\x8D', '\a', 'q', '\x2', '\x2', '\x8D', '\x8E', 
		'\a', 'h', '\x2', '\x2', '\x8E', '\x90', '\a', 'h', '\x2', '\x2', '\x8F', 
		'|', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x85', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x87', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x8C', '\x3', '\x2', '\x2', '\x2', '\x90', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x95', '\t', '\x4', '\x2', '\x2', '\x92', '\x94', '\t', 
		'\x5', '\x2', '\x2', '\x93', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x97', '\x3', '\x2', '\x2', '\x2', '\x95', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', '\x96', '.', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x95', '\x3', '\x2', '\x2', '\x2', '\x98', 
		'\x9A', '\t', '\x6', '\x2', '\x2', '\x99', '\x98', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x99', '\x3', 
		'\x2', '\x2', '\x2', '\x9B', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9C', 
		'\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\b', '\x18', '\x2', 
		'\x2', '\x9E', '\x30', '\x3', '\x2', '\x2', '\x2', '\r', '\x2', '\\', 
		'\x61', 'g', 'j', 'o', 'u', 'w', '\x8F', '\x95', '\x9B', '\x3', '\b', 
		'\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
