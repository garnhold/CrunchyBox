<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(MSBuildProjectDirectory)\..\CrunchyDough\bin\Release\CrunchyDough.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CrunchyDough" #>
<#@ output extension=".cs" #>
<#
int max_number_parameters = 10;
#>
using System;
using System.Reflection;
using System.Collections;
using System.Collections.Generic;

using CrunchyDough;

namespace CrunchyNoodle
{
<#for(int i = 1; i <= max_number_parameters; i++){#>
    public class Filterer_MethodInfo_CanGenericParametersHold<#=TTCS.ArgumentsForGeneric("P#", i)#> : Filterer_MethodInfo_CanGenericParametersHold
    {
        static public readonly Filterer_MethodInfo_CanGenericParametersHold<#=TTCS.ArgumentsForGeneric("P#", i)#> INSTANCE = new Filterer_MethodInfo_CanGenericParametersHold<#=TTCS.ArgumentsForGeneric("P#", i)#>();

        private Filterer_MethodInfo_CanGenericParametersHold() : base(<#=TTCS.Arguments("typeof(P#)", i)#>)
        {
        }
    }
	static public partial class Filterer_MethodInfo
	{
		static public Filterer<MethodInfo> CanGenericParametersHold<#=TTCS.ArgumentsForGeneric("P#", i)#>()
		{
			return Filterer_MethodInfo_CanGenericParametersHold<#=TTCS.ArgumentsForGeneric("P#", i)#>.INSTANCE;
		}
	}

<#}#>
}