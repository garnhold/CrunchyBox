<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
string[] flavors = new string[]{
	"",
	"Dynamic"
};
#>
using System;
using System.Reflection;
using System.Collections;
using System.Collections.Generic;

namespace CrunchyDough
{
<# foreach(string flavor in flavors){#>
	static public class I<#=flavor#>CustomAttributeProviderExtensions_ForTypeAttribute
    {
		static public bool HasCustomForTypeAttributeOfType(this I<#=flavor#>CustomAttributeProvider item, Type attribute_type, Type type)
        {
            return item.HasCustomAttributeOfSubType<ForTypeAttribute>(attribute_type, false, it => it.IsFor(type));
        }
        static public bool HasCustomForTypeAttributeOfType<T>(this I<#=flavor#>CustomAttributeProvider item, Type type) where T : ForTypeAttribute
        {
            return item.HasCustomForTypeAttributeOfType(typeof(T), type);
        }
	}
<# } #>
}