<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
string[] type_names = new string[]{
	"float",
	"double",
	"decimal"
};
#>
using System;
using System.Collections;
using System.Collections.Generic;

namespace Crunchy.Dough
{
	static public class NumberRealExtensions_Precision
    {
<# foreach(string type_name in type_names){#>
		static public <#=type_name#> GetAtPrecision(this <#=type_name#> item, int exponent)
		{
			return item.GetQuantizedMin((<#=type_name#>)Mathq.Pow(10, exponent));
		}
<# } #>
	}
}